{"title":"TP - Implémentation des graphes par matrice d'adjacence","markdown":{"yaml":{"title":"TP - Implémentation des graphes par matrice d'adjacence"},"headingText":"Implémentation simple","containsRefs":false,"markdown":"\n\n[**Cliquer ici pour accéder à la version notebook de ce TP dans Capytale**](https://capytale2.ac-paris.fr/web/c/d30c-1430856)\n\nOn considère un graphe $G$ dont les sommets sont les entiers de $0$ à $n-1$ et les arêtes sont les couples d'entiers $(i,j)$ avec $0\\leq i,j\\leq n-1$.\n\nL'objectif de ce TP est d'implémenter les graphes en python par matrice d'adjacence.\n\n**On considère ici que les graphes sont non orientés.**\n\n\n\n**Question 1** : Fonction permettant de créer un graphe comportant $n$ sommets et pas d'arêtes.\n\n**Question 2** : Fonction permettant d'ajouter une arête entre les sommets $i$ et $j$.\n\n**Question 3 - Application** : en utilisant les deux fonctions précédentes, créer une variable `g` représentant le graphe suivant :\n\n![graphe 1](graphe_tp1.png){width=50%}\n\n**Question 4** : Compléter la fonction `remove_edge` permettant de supprimer une arête entre les sommets $i$ et $j$.\n\n**Question 5** : Compléter les fonctions `add_vertex` et `remove_vertex` permettant d'ajouter un sommet et de supprimer un sommet dans un graphe. On rappelle que les sommets sont des entiers successifs. Par exemple, si on supprime le sommet $2$, les sommets $3$ et $4$ deviennent les sommets $2$ et $3$. Par ailleurs, le sommet ajouté par la fonction `add_vertex` doit être le plus grand sommet du graphe.\n\n**Question 6** : Compléter la fonction `est_adjacent` qui prend en paramètre un graphe `g` et deux sommets `i` et `j` et qui renvoie `True` si les sommets sont adjacents et `False` sinon.\n\n**Question 7** : Compléter la fonction `neighbors` qui prend en paramètre un graphe `g` et un sommet `i` et qui renvoie la liste des sommets adjacents au sommet `i`, puis la fonction `degree` qui prend en paramètre un graphe `g` et un sommet `i` et qui renvoie le degré du sommet `i`.\n\n## Implémentation objet\n\n**Question 8** : Créer une classe `Graph` permettant de représenter un graphe sous la forme d'une matrice d'adjacence, en reformulant les fonctions définies dans la partie précédente. Cette classe doit contenir les attributs suivants :\n\n* `order` : nombre de sommets du graphe\n* `matrix` : matrice d'adjacence du graphe\n\nCette classe doit contenir les méthodes suivantes :\n\n* `__init__` : constructeur de la classe\n* `add_edge` : ajoute une arête entre les sommets `i` et `j`\n* `remove_edge` : supprime une arête entre les sommets `i` et `j`\n* `add_vertex` : ajoute un sommet au graphe\n* `remove_vertex` : supprime un sommet du graphe\n* `is_adjacent` : renvoie `True` si les sommets `i` et `j` sont adjacents et `False` sinon\n* `neighbors` : renvoie la liste des sommets adjacents au sommet `i`\n* `degree` : renvoie le degré du sommet `i`\n* `__str__` : renvoie une chaîne de caractères représentant le graphe en affichant les lignes de la matrice d'adjacence l'une en dessous de l'autre.\n\n\n**Question 9 - Application** : en utilisant la classe `Graph`, créer une variable `g` représentant le graphe suivant :\n\n![graphe 2](grpahe1.png){width=50%}\n\nDéterminer la liste des voisins du sommet $2$.\n\n**Bonus** : Implémenter une fonction `draw_graph` permettant de dessiner un graphe à partir de sa matrice d'adjacence.\n\nPour cela, on utilisera le module `networkx` qui est spécialisé dans l'analyse des graphes. Il s'agit donc de définir un graphe de type `networkx` à partir de la matrice d'adjacence du graphe et de le dessiner à l'aide de la fonction `draw` du module `networkx`.\n\nQuelques commandes utiles :\n\n* g = nx.Graph() : création d'un graphe vide\n* g.add_node(i) : ajoute le sommet `i` au graphe `g`\n* g.add_edge(i,j) : ajoute une arête entre les sommets `i` et `j`\n* nx.draw(g) : dessine le graphe `g`\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"filters":["lightbox"],"output-file":"tp_graphe_matrice.html"},"language":{},"metadata":{"lang":"fr","fig-responsive":true,"quarto-version":"1.2.335","bibliography":["../references.bib"],"theme":{"light":["flatly","../theme_light.scss"],"dark":["darkly","../theme_dark.scss"]},"grid":{"sidebar-width":"250px","body-width":"1000px","margin-width":"300px"},"lightbox":"auto","code-block-border-left":"#31BAE9","code-block-bg":true,"title":"TP - Implémentation des graphes par matrice d'adjacence"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"tp_graphe_matrice.pdf"},"language":{},"metadata":{"block-headings":true,"bibliography":["../references.bib"],"papersize":"a4","title":"TP - Implémentation des graphes par matrice d'adjacence"},"extensions":{"book":{}}}}}